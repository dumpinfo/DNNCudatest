;  Make the network learn an XOR problem using classification mode.
;  Since we are using the minimum number of hidden neurons in the
;  first hidden layer, this is a very difficult task to learn.
;  Thus, we use a different training scheme.
;  Note that just to be cute we stick in a second hidden layer.

DOMAIN = REAL
ERROR TYPE = CROSS ENTROPY
MODE = CLASSIFICATION
OUTPUT ACTIVATION = LINEAR

INPUTS = 4
OUTPUTS = 1
FIRST HIDDEN = 4
SECOND HIDDEN = 2

CLASS = 0
CUMULATE TRAINING SET = zero4

CLASS = 1
CUMULATE TRAINING SET = one4

LEARNING ALGORITHM = ANNEALING_CJ
ANNEALING INITIALIZATION TEMPERATURES = 2
ANNEALING INITIALIZATION ITERATIONS = 200
ANNEALING INITIALIZATION SETBACK = 50
ANNEALING INITIALIZATION START = 0.2
ANNEALING INITIALIZATION STOP = 0.1
ANNEALING ESCAPE TEMPERATURES = 2
ANNEALING ESCAPE ITERATIONS = 20
ANNEALING ESCAPE SETBACK = 10
ANNEALING ESCAPE START = 0.5
ANNEALING ESCAPE STOP = 0.05
ALLOWABLE ERROR = 0.05
MAXIMUM RESTARTS = 100
CJ ACCURACY = 5
CJ REFINE = 3
CJ PRETRIES = 6

COMPUTE WEIGHTS
ERASE TRAINING SET

PRINT WEIGHTS = class1.prn
SAVE NETWORK = class1.wts
RUN OUTPUT = class1.prn
RUN NETWORK WITH INPUT = zero4
RUN NETWORK WITH INPUT = one4
ACTIVATION THRESHOLD FOR CONFUSION = 50
ZERO CONFUSION ROW
CLASSIFY WITH INPUT = zero4
LIST CONFUSION ROW
ZERO CONFUSION ROW
CLASSIFY WITH INPUT = one4
LIST CONFUSION ROW
ERASE NETWORK

;  Now we solve the XOR problem in CLASSIFICATION mode using
;  inputs and hidden neurons in the complex domain.
;  The minimum number of complex hidden neurons is two, but that
;  is an extremely difficult problem.  We use three to make it easier.

DOMAIN = COMPLEX-HIDDEN
ERROR TYPE = CROSS ENTROPY
MODE = CLASSIFICATION
OUTPUT ACTIVATION = LINEAR

INPUTS = 2
OUTPUTS = 1
FIRST HIDDEN = 3
SECOND HIDDEN = 0

CLASS = 0
CUMULATE TRAINING SET = zero4

CLASS = 1
CUMULATE TRAINING SET = one4

LEARNING ALGORITHM = ANNEALING_CJ
COMPUTE WEIGHTS
ERASE TRAINING SET

PRINT WEIGHTS = class2.prn
SAVE NETWORK = class2.wts
RUN OUTPUT = class2.prn
RUN NETWORK WITH INPUT = zero4
RUN NETWORK WITH INPUT = one4
ACTIVATION THRESHOLD FOR CONFUSION = 50
ZERO CONFUSION ROW
CLASSIFY WITH INPUT = zero4
LIST CONFUSION ROW
ZERO CONFUSION ROW
CLASSIFY WITH INPUT = one4
LIST CONFUSION ROW
ERASE NETWORK



